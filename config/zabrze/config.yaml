abbrevs:
  # general
  ## What does '-l' stand for?
  - name: exec -l $SHELL
    abbr: reload
    snippet: exec -l $SHELL
    evaluate: true

  - name: gls
    abbr: ls
    snippet: gls --color=auto --literal
    if: (( ${+commands[gls]} ))

  - name: ls
    abbr: ls
    snippet: ls --color=auto --literal

  - name: grep
    abbr: grep
    snippet: grep --color=auto

  ## Do not replace '-a' with '--append' because BSD script command
  ## does not support a long option
  - name: script
    abbr: script
    snippet: script -a

  - name: dirs
    abbr: dirs
    snippet: show_directory_stack

  - name: pushd
    abbr: p
    snippet: push_directory

  - name: popd
    abbr: pop
    snippet: pop_directory

  - name: bundle exec
    abbr: be
    snippet: bundle exec

  ## usage: which cat | xargs -n 1 -o file
  - name: xargs
    abbr: x
    snippet: "xargs --max-args=1 --open-tty"
    global: true

  - name: cron-apply
    abbr: ca
    snippet: cron-apply

  - name: cron-apply
    abbr: ca
    snippet: cron-apply
    global: true
    context: '^sudo\s'

  - name: internet-fasting-period
    abbr: ifp
    snippet: internet-fasting-period

  - name: pokemon
    abbr: pokemon
    snippet: ASDF_PYTHON_VERSION=$(cat $DOTPATH/.python-version) pokemon
    evaluate: true

  - name: reload-tmux
    abbr: reload-tmux
    snippet: ps aux | grep tmux | grep -v grep | awk '{ print $2 }' | xargs kill -2

  - name: zenn
    abbr: zenn
    snippet: npx zenn

  - name: zenn new
    abbr: new
    snippet: new:article --slug
    global: true
    context: '^npx zenn\s'

  - name: zenn preview
    abbr: p
    snippet: preview
    global: true
    context: '^npx zenn\s'



  # for safe operations
  - name: trash
    abbr: rm
    snippet: ASDF_NODEJS_VERSION=$(cat $DOTPATH/.node-version) trash
    evaluate: true
    if: (( ${+commands[trash]} ))

  - name: grm
    abbr-pattern: ^(rm|mv|cp)$
    snippet: g${current_abbr} -i
    evaluate: true
    if: '[[ -e "/usr/local/opt/coreutils/bin/g$current_abbr" ]]'

  - name: rm
    abbr-pattern: ^(rm|mv|cp)$
    evaluate: true
    snippet: $current_abbr -i



  # deprecated
  - name: pushd
    abbr: pushd
    snippet: push_directory

  - name: popd
    abbr: popd
    snippet: pop_directory

  - name: shred
    abbr: shred
    snippet: sudo shredall

  - name: shredall
    abbr: shredall
    snippet: sudo shredall



  # git
  - name: git add
    abbr: ga
    snippet: git add

  - name: git add
    abbr: a
    snippet: add
    global: true
    context: '^git\s'

  - name: git add --all
    abbr: gaa
    snippet: git add --all

  - name: git add --all
    abbr: aa
    snippet: add --all
    global: true
    context: '^git\s'

  - name: git commit
    abbr: gc
    snippet: git commit

  - name: git commit
    abbr: c
    snippet: commit
    global: true
    context: '^git\s'

  - name: git status
    abbr: gst
    snippet: git status

  - name: git status
    abbr: s
    snippet: status
    global: true
    context: '^git\s'

  - name: git diff
    abbr: gd
    snippet: git diff

  - name: git diff
    abbr: d
    snippet: diff
    global: true
    context: '^git\s'

  - name: git checkout
    abbr: gco
    snippet: git checkout

  - name: git checkout
    abbr: co
    snippet: checkout
    global: true
    context: '^git\s'

  - name: git cherry-pick
    abbr: gcp
    snippet: git cherry-pick

  - name: git cherry-pick
    abbr: cp
    snippet: cherry-pick
    global: true
    context: '^git\s'

  - name: git up
    abbr: up
    snippet: push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)
    evaluate: true
    global: true
    context: '^git\s'

  - name: git count
    abbr: count
    snippet: log --oneline | wc --lines
    global: true
    context: '^git\s'

  - name: git refresh
    abbr: gref
    snippet: touch $(git rev-parse --git-dir)/hooks/tmp && rm --recursive $(git rev-parse --git-dir)/hooks/* && git init
    evaluate: true



  # docker
  - name: docker
    abbr: d
    snippet: docker

  - name: docker compose
    abbr: dcom
    snippet: docker compose

  - name: docker compose
    abbr: c
    snippet: compose
    global: true
    context: '^docker\s'



  # Ruby on Rails
  - name: console
    abbr: c
    snippet: console
    global: true
    context: '^(bundle exec\s)?rails\s'

  - name: generate
    abbr: g
    snippet: generate
    global: true
    context: '^(bundle exec\s)?rails\s'

  - name: server
    abbr: s
    snippet: server
    global: true
    context: '^(bundle exec\s)?rails\s'



  # awk
  ## https://github.com/Ryooooooga/dotfiles/blob/ff15a59e260d87ac04c8ebdaf375336e0e188d3e/config/zabrze/config.yaml#L286-L305
  - name: '.1'
    abbr: '.1'
    snippet: awk '{ print $1 }'

  - name: '.2'
    abbr: '.2'
    snippet: awk '{ print $2 }'

  - name: '.3'
    abbr: '.3'
    snippet: awk '{ print $3 }'

  - name: '.4'
    abbr: '.4'
    snippet: awk '{ print $4 }'

  - name: '.5'
    abbr: '.5'
    snippet: awk '{ print $5 }'

  - name: '.6'
    abbr: '.6'
    snippet: awk '{ print $6 }'

  - name: '.7'
    abbr: '.7'
    snippet: awk '{ print $7 }'

  - name: '.8'
    abbr: '.8'
    snippet: awk '{ print $8 }'

  - name: '.9'
    abbr: '.9'
    snippet: awk '{ print $9 }'

  - name: GNU getopt for macOS
    abbr: getopt
    snippet: $(brew --prefix)/opt/gnu-getopt/bin/getopt
    evaluate: true
    if: '[[ -e "/usr/local/opt/gnu-getopt/bin/getopt" ]]'

  - name: OpenSSL for macOS
    abbr: openssl
    snippet: $(brew --prefix)/opt/openssl/bin/openssl
    evaluate: true
    if: '[[ -e "/usr/local/opt/openssl/bin/openssl" ]]'

  - name: GNU commands for macOS
    abbr-pattern: '' # matches all commands
    snippet: g${current_abbr}
    evaluate: true
    if: '[[ -e "/usr/local/opt/coreutils/bin/g$current_abbr" ]] || [[ -e "/usr/local/opt/findutils/bin/g$current_abbr" ]] || [[ -e "/usr/local/opt/gnu-sed/bin/g$current_abbr" ]]'

#!/bin/sh
# shellcheck disable=SC2004

set -eu

HEADLINE_COLOR="\033[0;47;30m"
NO_COLOR="\033[0m"

main() {
  #parse "$@"
  #eval "set -- $REST"

  echo "${HEADLINE_COLOR}JOB	TIME					COMMAND																															${NO_COLOR}"
  [ "$CURRENT_TIME" = 1 ] && echo "0	$(date "+%a %b %d %H:%M:%S %Y") a $(whoami)	echo \"this is the current time, not a schedule\""

  atq | sort | while read -r job; do
    echo "$job	$(at -c "$(echo "$job" | cut -f1)" | tail -n 2 | head -n 1)"
  done
}

# @getoptions
parser_definition() {
  setup   REST help:usage -- "Usage: neoatq [options]... [arguments]..." ''
  msg -- 'Options:'
  flag    CURRENT_TIME    --current-time -- "show current time"
  disp    :usage       -h --help         -- "show help message and exit"
  disp    VERSION         --version      -- "show current version"
}
# @end

# @gengetoptions parser -i parser_definition -
# Generated by getoptions (BEGIN)
# URL: https://github.com/ko1nksm/getoptions (v3.3.0)
CURRENT_TIME=''
REST=''
getoptions_parse() {
  OPTIND=$(($#+1))
  while OPTARG= && [ $# -gt 0 ]; do
    case $1 in
      --?*=*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%%\=*}" "${OPTARG#*\=}"' ${1+'"$@"'}
        ;;
      --no-*|--without-*) unset OPTARG ;;
      -[h]?*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%"${OPTARG#??}"}" -"${OPTARG#??}"' ${1+'"$@"'}
        OPTARG= ;;
    esac
    case $1 in
      '--current-time')
        [ "${OPTARG:-}" ] && OPTARG=${OPTARG#*\=} && set "noarg" "$1" && break
        eval '[ ${OPTARG+x} ] &&:' && OPTARG='1' || OPTARG=''
        CURRENT_TIME="$OPTARG"
        ;;
      '-h'|'--help')
        usage
        exit 0 ;;
      '--version')
        echo "${VERSION}"
        exit 0 ;;
      --)
        shift
        while [ $# -gt 0 ]; do
          REST="${REST} \"\${$(($OPTIND-$#))}\""
          shift
        done
        break ;;
      [-]?*) set "unknown" "$1"; break ;;
      *)
        REST="${REST} \"\${$(($OPTIND-$#))}\""
    esac
    shift
  done
  [ $# -eq 0 ] && { OPTIND=1; unset OPTARG; return 0; }
  case $1 in
    unknown) set "Unrecognized option: $2" "$@" ;;
    noarg) set "Does not allow an argument: $2" "$@" ;;
    required) set "Requires an argument: $2" "$@" ;;
    pattern:*) set "Does not match the pattern (${1#*:}): $2" "$@" ;;
    notcmd) set "Not a command: $2" "$@" ;;
    *) set "Validation error ($1): $2" "$@"
  esac
  echo "$1" >&2
  exit 1
}
usage() {
cat<<'GETOPTIONSHERE'
Usage: neoatq [options]... [arguments]...

Options:
      --current-time          show current time
  -h, --help                  show help message and exit
      --version               show current version
GETOPTIONSHERE
}
eval getoptions_parse ${1+'"$@"'}; eval set -- "${REST}"
# Generated by getoptions (END)
# @end

main

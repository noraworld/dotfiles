#!/bin/bash

PROGNAME=$(basename $0)

function main() {
  if [ -e /etc/lsb-release ]; then
    if [[ "$(cat /etc/lsb-release | grep -c "Ubuntu")" -gt 0 ]]; then
      case "${argv[0]}" in
        install)
          require_root
          require_general_env
          require_aptfile
          require_packages

          apt -y install "${argv[@]:1}"

          check_command_success
          update_packages $HOME/.Aptfile
          ;;
        uninstall)
          require_root
          require_general_env
          require_aptfile
          require_packages

          echo "TODO!"

          check_command_success
          update_packages $HOME/.Aptfile
          ;;
        list)
          list_packages $HOME/.Aptfile
          exit 0
          ;;
        edit)
          $EDITOR $HOME/.Aptfile
          exit 0
          ;;
        restore)
          require_root
          require_general_env
          require_aptfile

          packages=( $(list_packages $HOME/.Aptfile) )
          apt -y install "${packages[@]}"

          check_command_success
          ;;
        *)
          echo -e "ERROR: Unknown command: "${argv[0]}"" >&2
          exit 1
          ;;
      esac
    fi
  fi
}


function require_root() {
  if [[ "$(whoami)" != "root" ]]; then
    echo -e "ERROR: Requires root privilege to install packages." >&2
    exit 1
  fi
}


function require_general_env() {
  if [[ "$HOME" = "/root" ]]; then
    echo -e "EROOR: The environment variables are root's one. Specify option \"-E\" to \"sudo\" command." >&2
    exit 1
  fi
}


function require_aptfile() {
  if [[ ! -e "$HOME/.Aptfile" ]]; then
    echo -e "ERROR: Aptfile is missing." >&2
    exit 1
  fi
}


function require_packages() {
  if [[ "${argv[@]:1}" = "" ]]; then
    echo -e "ERROR: The packages name missing." >&2
    exit 1
  fi
}


function check_command_success() {
  if [[ "$(echo $?)" -ne 0 ]]; then
    echo
    echo "ERROR: "${argv[0]}" failed." >&2
    exit 1
  fi
}


function list_packages {
  # trim comment, delete empty line, and sort packages
  cat "${1}" | awk '{ sub("#.*$", ""); print $0; }' | sed -e 's/[ \t]*$//' | sed -e '/^$/d' | sort
}


function update_packages {
  echo "${argv[@]:1}" | sed -e "s/ /\n/g" >> ${1}
  echo
  echo -e "Update ${1} successfully."
}


for opt in "$@"
do
  case "$opt" in
    '-h' | '--help' )
      usage
      exit 0
    ;;
    '--' | '-' )
      shift 1
      argv+=( "$@" )
      break
    ;;
    -* )
      echo "$PROGNAME: illegal option -- '$(echo $1 | sed 's/^-*//')'" 1>&2
      exit 1
    ;;
    * )
      if [[ ! -z "$1" ]] && [[ ! "$1" =~ ^-+ ]]; then
        argv+=( "$1" )
        shift 1
      fi
    ;;
  esac
done

main

#!/bin/bash
PROGNAME=$(basename $0)

# parse options
# https://qiita.com/b4b4r07/items/dcd6be0bb9c9185475bb
is_confirmation=true
for opt in "$@"
do
  case "$opt" in
    '-y' | '--yes' )
      is_confirmation=false
      shift
    ;;
    '--' | '-' )
      shift 1
      param+=( "$@" )
      break
      ;;
    -* )
      echo "$PROGNAME: illegal option -- '$(echo $1 | sed 's/^-*//')'" 1>&2
      exit 1
      ;;
    * )
      if [[ ! -z "$1" ]] && [[ ! "$1" =~ ^-+ ]]; then
        param+=( "$1" )
        shift 1
      fi
    ;;
  esac
done

if [ -n "$param" ]; then
  stopped_job_cmds_str=$(ps -e -o command     | grep $param | grep -v grep | grep -v $PROGNAME | awk '{print $1}')
  stopped_job_pids_str=$(ps -e -o pid,command | grep $param | grep -v grep | grep -v $PROGNAME | awk '{print $1}')
else
  stopped_job_cmds_str=$(ps -o command -p $(echo $(jobs -p)) | grep -v COMMAND | awk '{print $1}')
  stopped_job_pids_str=$(jobs -p)
fi

stopped_job_cmds_arr=(`echo $stopped_job_cmds_str`)
stopped_job_pids_arr=(`echo $stopped_job_pids_str`)

if [[ ${#stopped_job_cmds_arr[@]} -ne ${#stopped_job_pids_arr[@]} ]]; then
  echo "The number of commands and pids are not same." 1>&2
  echo "If you see this message itâ€™s probably a bug." 1>&2
  exit 1
fi

if [[ $stopped_job_cmds_str = "" ]]; then
  echo "No processes exist."
  exit 0
fi

if "${is_confirmation}"; then
  if [[ ${#stopped_job_cmds_arr[@]} -eq 1 ]]; then
    echo -e "${#stopped_job_cmds_arr[@]} process is found:"
  else
    echo -e "${#stopped_job_cmds_arr[@]} processes are found:"
  fi

  echo -e "\033[1;93m"
  for i in `seq 1 ${#stopped_job_cmds_arr[@]}`
  do
    echo "	${stopped_job_cmds_arr[$i-1]} (pid: ${stopped_job_pids_arr[$i-1]})"
  done
  echo -e "\033[00m"

  echo -n "Are you sure you want to kill them all? [y/n]: "
  exec < /dev/tty
  read confirm

  echo -e ""
fi

if ! "${is_confirmation}" || [ $confirm = "y" ] || [ $confirm = "Y" ] || [ $confirm = "yes" ] || [ $confirm = "Yes" ] || [ $confirm = "YES" ]; then
  for i in `seq 1 ${#stopped_job_pids_arr[@]}`
  do
    kill -9 ${stopped_job_pids_arr[$i-1]}
    echo -e "Killed ${stopped_job_cmds_arr[$i-1]} (pid: ${stopped_job_pids_arr[$i-1]})"
  done

  echo -e ""
else
  echo -e "Canceled"
  exit 1
fi

exit 0

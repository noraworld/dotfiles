#!/usr/bin/env node

function main() {
  const EXTENSION_PATH       = `${process.env.HOME}/Library/Application Support/Google/Chrome/Default/Extensions`
  const COMMON_LOCALES       = ['en', 'en_US']
  const FG_MAGENTA           = '\x1b[35m%s\x1b[0m'
  const CHROME_WEB_STORE_URL = 'https://chromewebstore.google.com/detail'
  const fs = require('fs')

  fs.readdir(EXTENSION_PATH, (err, extensionIds) => {
    extensionIds.forEach(extensionId => {
      fs.readdir(`${EXTENSION_PATH}/${extensionId}`, (err, versionDirectories) => {
        // if an unexpected path is detected
        if (!versionDirectories) {
          console.warn(FG_MAGENTA, `UNEXPECTED PATH ${EXTENSION_PATH}/${extensionId} IS DETECTED!`)
          return
        }

        // if the directory inside an extension ID doesn't contain any version directories
        if (!versionDirectories.length) {
          console.warn(FG_MAGENTA, 'NOT AN EXTENSION DIRECTORY!')
          return
        }

        let extensionSourceDirectory = `${EXTENSION_PATH}/${extensionId}/${versionDirectories[versionDirectories.length - 1]}`
        let extensionName            = JSON.parse(fs.readFileSync(`${extensionSourceDirectory}/manifest.json`))['name']

        // if the extension name of a manifest.json is localized
        if (extensionName.match(/__MSG_.+__/g)) {
          for (locale of COMMON_LOCALES) {
            let extensionNameKey = extensionName.replace(/^__MSG_/, '').replace(/__$/, '')
            let messageJsonFile = `${extensionSourceDirectory}/_locales/${locale}/messages.json`

            if (fs.existsSync(messageJsonFile)) {
              if (!JSON.parse(fs.readFileSync(messageJsonFile))[extensionNameKey]) extensionNameKey = extensionNameKey.toLowerCase()
              extensionName = JSON.parse(fs.readFileSync(messageJsonFile))[extensionNameKey]['message']
              break
            }
          }
        }

        // output the result in a markdown format
        console.log(`* [${extensionName}](${CHROME_WEB_STORE_URL}/${extensionId})`)
      })
    })
  })
}

main()

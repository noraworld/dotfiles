#!/usr/bin/env sh

main() {
  parse_options "$@"

  export -f get_commits_by_pr
  commits=$(
    gh pr list            \
      --author "@me"      \
      --state merged      \
      --limit $limit      \
      --json number,title \
      --template '{{range .}}{{tablerow (printf "#%v" .number | autocolor "magenta") .title}}{{end}}' |
    fzf                                              \
      --multi                                        \
      --preview 'gh pr view "$(echo {1})"'           \
      --preview-window up:$(expr $(tput lines) - 14) \
      --tac                                          \
      --layout=reverse-list |
    awk '{ print $1 }' |
    # https://stackoverflow.com/questions/11003418/calling-shell-functions-with-xargs
    xargs -I {} sh -c 'get_commits_by_pr "$@"' _ {}
  )

  if [ "$commits" = "" ]; then
    echo "Error: Nothing was selected" >&2
    exit 1
  fi

  echo git cherry-pick $commits
}

get_commits_by_pr() {
  gh pr view $1 --json commits --jq .commits[].oid
}

usage() {
  echo "Usage:"
  echo "	-h"
  echo "		Show this message and exit"
  echo
  echo "	-L <VALUE> | --limit <VALUE> | --limit=<VALUE>"
  echo "		Specify how many PRs do you want to get"
  echo "		30 by default"
}

parse_options() {
  limit=30

  while (( $# > 0 )); do
    case $1 in
      -h)
        usage
        exit 0
        ;;
      -L | --limit | --limit=*)
        if [ "$(expr match "$1" '^--limit=')" -ne 0 ]; then
          limit=$(echo $1 | sed -e 's/^--limit=//')
        elif [ -z "$2" ] || [ "$(expr match "$2" '^-+')" -ne 0 ]; then
          echo "Error: Value required" >&2
          exit 1
        else
          limit="$2"
          shift
        fi
        ;;
      -*)
        echo "Error: Illegal option: $1" >&2
        exit 1
        ;;
      *)
        argv=("${argv[@]}" "$1")
        ;;
    esac

    shift
  done

  # check the number of arguments
  if [ "${#argv[@]}" -gt 0 ]; then
    echo "Error: Too many arguments" >&2
    exit 1
  fi
}

main "$@"

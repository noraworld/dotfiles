#!/bin/sh

PROGNAME=$(basename $0)
VERBOSE=0

main() {
  parse_options "$@"
  # Do not execute anything between them because "$?" is changed!
  [ "$?" -eq 0 ] || return "$?"

  # Assuming all working directories are under $HOME/workspace
  for working_dir in $(find $HOME/workspace -name '.git' 2>/dev/null | xargs -n 1 dirname); do
    check
  done

  for working_dir in $(dirs -l); do
    # Avoid duplicate detection
    [ "$(echo $working_dir | grep -i "^$HOME/workspace")" != "" ] || check
  done
}

check() {
  #
  # Check Git directory
  #

  if [ "$(git -C "$working_dir" rev-parse --git-dir 2> /dev/null)" = "" ]; then
    if [ "$VERBOSE" -eq 1 ]; then
      echo                                               >&2
      echo "\033[38;05;3m${working_dir}\033[00m:"        >&2
      echo "\033[38;05;9m!! Not a Git directory\033[00m" >&2
    fi

    continue
  fi

  #
  # Check untracked, not committed, etc.
  #

  stat=$(git -C "$working_dir" status --porcelain)

  if [[ $stat ]]; then
    echo
    echo "\033[38;05;3m${working_dir}\033[00m:"
    echo "$stat"
  fi

  #
  # Check not pushed
  #

  upstream=${1:-'@{u}'}
  local=$(git -C "$working_dir" rev-parse @ 2>/dev/null)
  remote=$(git -C "$working_dir" rev-parse "$upstream" 2>/dev/null)
  base=$(git -C "$working_dir" merge-base @ "$upstream" 2>/dev/null)

  if [ -z $remote ] || [ -z $base ]; then
    if [ "$VERBOSE" -eq 1 ]; then
      if ! [[ $stat ]]; then
        echo                                        >&2
        echo "\033[38;05;3m${working_dir}\033[00m:" >&2
      fi

      echo "\033[38;05;9m!! Not having a remote repository\033[00m" >&2
    fi

    continue
  fi

  if [ $local != $remote ] && [ $remote = $base ]; then
    if ! [[ $stat ]]; then
      echo
      echo "\033[38;05;3m${working_dir}\033[00m:"
    fi

    echo "â‡¡"
  fi

  #
  # Check stashes
  #
  # MEMO:
  #   We do not need to check the branches
  #   because the stashes are shared across branches

  stashes=$(git -C "$working_dir" stash list)

  if [[ $stashes ]]; then
    if ! [[ $stat ]]; then
      echo
      echo "\033[38;05;3m${working_dir}\033[00m:"
    fi

    echo "\033[38;05;9m!! One or more stashes detected\033[00m"
  fi

  #
  # Check the number of branches
  #

  branches=$(git -C "$working_dir" branch | wc -l)

  if [ $branches -ne 1 ]; then
    if ! [[ $stat ]]; then
      echo
      echo "\033[38;05;3m${working_dir}\033[00m:"
    fi

    echo "\033[38;05;9m!! More than or equal to two branches detected\033[00m"
  fi
}

parse_options() {
  while (( $# > 0 )); do
    case $1 in
      -v | --verbose)
        VERBOSE=1
        ;;
      -*)
        echo "$PROGNAME: Invalid option" >&2
        return 1
        ;;
      *)
        :
        ;;
    esac

    shift
  done
}

main "$@"
